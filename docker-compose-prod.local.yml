services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile_prod
    container_name: frontend_test
    restart: always
    ports:
      - "80:80"
    env_file:
      - ./frontend/frontend/.env.local  # Path to the .env file in your React app    
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile_prod
    container_name: backend_test
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: always
    env_file:
      - .env_prod
    command: >
      sh -c "
      python manage.py migrate && 
      python manage.py collectstatic --noinput && 
      python manage.py createsu && 
      python manage.py loaddata testdata/fixtures/expenses_sample.json &&
      python manage.py loaddata testdata/fixtures/messeevent_sample.json &&
      python manage.py loaddata testdata/fixtures/pricecurrency_sample.json &&
      python manage.py loaddata testdata/fixtures/storagelocation_sample.json &&
      python manage.py loaddata testdata/fixtures/ingredient_sample.json &&
      python manage.py loaddata testdata/fixtures/portionunit_sample.json &&
      python manage.py loaddata testdata/fixtures/storageitem_sample.json &&
      python manage.py loaddata testdata/fixtures/userdata.json &&
      python manage.py loaddata testdata/fixtures/speise_sample.json &&
      python manage.py loaddata testdata/fixtures/recipe_sample &&
      python manage.py loaddata testdata/fixtures/recipeingredients_sample &&
      gunicorn backend.wsgi:application --chdir /app/backend --bind 0.0.0.0:8000"

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env_prod

volumes:
  postgres_data:
