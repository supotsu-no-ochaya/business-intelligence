# Use the Node.js base image
FROM node:16-alpine as build

# Set the working directory
WORKDIR /app

# Copy package.json and install dependencies
COPY frontend/package.json /app/
COPY frontend/package-lock.json /app/
RUN npm install

# Copy the rest of the frontend code
COPY frontend /app/

# Replace API_BASE_URL superduper way
RUN sed -i "s|const API_BASE_URL = 'http://localhost:8000/api';|const API_BASE_URL = 'http://141.45.146.228/api';|" src/apiService.js
RUN sed -i "s|await axiosInstance.post('http://localhost:8000/upload-json/', formData, {|await axiosInstance.post('http://141.45.146.228:8000/upload-json/', formData, {|" src/apiService.js

RUN cat src/apiService.js


# Build the production version of the app
RUN npm run build

# Copy Django's static files into the React build directory
# Adjust the path depending on your backend setup
COPY staticfiles/ /app/build/static/

# Serve the build with an HTTP server (you can use any production server)
FROM nginx:alpine

# Copy the build output to the nginx container
COPY --from=build /app/build /usr/share/nginx/html

# Configure Nginx (Optional: can add custom Nginx configurations here if needed)
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start nginx to serve the app
CMD ["nginx", "-g", "daemon off;"]

